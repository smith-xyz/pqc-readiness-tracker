{
    "last_updated": "2025-10-16",
    "nodes": {
        "nist-fips-203": {
            "id": "nist-fips-203",
            "type": "standard",
            "name": "NIST FIPS 203 (ML-KEM)",
            "layer": 0,
            "status": {
                "specification": "final"
            },
            "metadata": {
                "date": "2024-08-13",
                "description": "Module-Lattice-Based Key-Encapsulation Mechanism",
                "sources": [
                    {
                        "label": "NIST FIPS 203",
                        "url": "https://csrc.nist.gov/pubs/fips/203/final"
                    }
                ]
            }
        },
        "nist-fips-204": {
            "id": "nist-fips-204",
            "type": "standard",
            "name": "NIST FIPS 204 (ML-DSA)",
            "layer": 0,
            "status": {
                "specification": "final"
            },
            "metadata": {
                "date": "2024-08-13",
                "description": "Module-Lattice-Based Digital Signature Standard",
                "sources": [
                    {
                        "label": "NIST FIPS 204",
                        "url": "https://csrc.nist.gov/pubs/fips/204/final"
                    }
                ]
            }
        },
        "nist-fips-205": {
            "id": "nist-fips-205",
            "type": "standard",
            "name": "NIST FIPS 205 (SLH-DSA)",
            "layer": 0,
            "status": {
                "specification": "final"
            },
            "metadata": {
                "date": "2024-08-13",
                "description": "Stateless Hash-Based Digital Signature Standard (SPHINCS+)",
                "sources": [
                    {
                        "label": "NIST FIPS 205",
                        "url": "https://csrc.nist.gov/pubs/fips/205/final"
                    }
                ],
                "notes": "Hash-based signatures, conservative choice for long-term security. Slower adoption due to larger signatures and lower performance compared to ML-DSA."
            }
        },
        "nist-falcon": {
            "id": "nist-falcon",
            "type": "standard",
            "name": "NIST Falcon (FN-DSA)",
            "layer": 0,
            "status": {
                "specification": "evaluation"
            },
            "metadata": {
                "est_date": "TBD",
                "description": "Compact lattice-based digital signature algorithm",
                "sources": [
                    {
                        "label": "NIST Round 4 Submissions",
                        "url": "https://csrc.nist.gov/projects/post-quantum-cryptography/round-4-submissions"
                    },
                    {
                        "label": "Falcon Sign",
                        "url": "https://falcon-sign.info/"
                    }
                ],
                "notes": "NIST Round 4 evaluation. ~30% more compact signatures than ML-DSA, but harder to implement securely. Future alternative for bandwidth-constrained applications."
            }
        },
        "ietf-tls-hybrid": {
            "id": "ietf-tls-hybrid",
            "type": "standard",
            "name": "IETF TLS Hybrid KEX",
            "layer": 0,
            "status": {
                "specification": "draft"
            },
            "metadata": {
                "est_date": "2026-Q2",
                "description": "Hybrid key exchange for TLS 1.3",
                "sources": [
                    {
                        "label": "IETF TLS Hybrid Draft",
                        "url": "https://datatracker.ietf.org/doc/draft-ietf-tls-hybrid-design/"
                    }
                ],
                "notes": "Required for PQC TLS cipher suites"
            }
        },
        "openssl-3.5": {
            "id": "openssl-3.5",
            "type": "crypto_library",
            "name": "OpenSSL 3.5",
            "layer": 1,
            "version": "3.5.4",
            "depends_on": [
                "nist-fips-203",
                "nist-fips-204",
                "nist-fips-205"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available",
                    "ipsec": "not_available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {
                    "tls": "not_available",
                    "ipsec": "not_available"
                },
                "slh_dsa_api": "available",
                "slh_dsa_protocols": {
                    "tls": "not_available",
                    "ipsec": "not_available"
                }
            },
            "metadata": {
                "date": "2025-04-08",
                "description": "Widely used crypto library (LTS release)",
                "protocols": {
                    "TLS 1.3": "available",
                    "SSH": "not_available",
                    "IPSec/IKEv2": "not_available"
                },
                "sources": [
                    {
                        "label": "OpenSSL 3.5 Release",
                        "url": "https://openssl-library.org/post/2025-04-08-openssl-35-final-release/"
                    },
                    {
                        "label": "GitHub Release",
                        "url": "https://github.com/openssl/openssl/releases/tag/openssl-3.5.4"
                    }
                ],
                "notes": "OpenSSL 3.5 (April 2025, LTS) includes ML-KEM/ML-DSA/SLH-DSA algorithms. ML-KEM in TLS 1.3 available. ML-DSA and SLH-DSA not yet integrated in TLS protocol layer."
            }
        },
        "nss": {
            "id": "nss",
            "type": "crypto_library",
            "name": "NSS (Network Security Services)",
            "layer": 1,
            "version": "3.112+",
            "depends_on": [
                "nist-fips-203",
                "nist-fips-204"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "not_available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2024-11",
                "description": "Mozilla's crypto library, used in Firefox and RHEL",
                "protocols": {
                    "TLS 1.3": "available"
                },
                "sources": [
                    {
                        "label": "NSS Documentation",
                        "url": "https://firefox-source-docs.mozilla.org/security/nss/index.html"
                    },
                    {
                        "label": "RHEL 10 PQC Blog",
                        "url": "https://www.redhat.com/en/blog/post-quantum-cryptography-red-hat-enterprise-linux-10"
                    }
                ],
                "notes": "RHEL 10.0 ships with NSS 3.112 including ML-KEM support for hybrid TLS 1.3 key exchange. ML-DSA under active development, expected in RHEL 10.1+."
            }
        },
        "go-stdlib-crypto": {
            "id": "go-stdlib-crypto",
            "type": "crypto_library",
            "name": "Go stdlib crypto",
            "layer": 1,
            "version": "1.24",
            "depends_on": [
                "nist-fips-203"
            ],
            "independent": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available",
                    "quic": "available"
                },
                "ml_dsa_api": "planned",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2025-02",
                "description": "Go's built-in crypto implementation",
                "protocols": {
                    "TLS 1.3": "available",
                    "QUIC": "available"
                },
                "sources": [
                    {
                        "label": "Go 1.24 ML-KEM",
                        "url": "https://go.dev/doc/go1.24#crypto-mlkem"
                    },
                    {
                        "label": "Go 1.23 Release",
                        "url": "https://go.dev/doc/go1.23"
                    },
                    {
                        "label": "GitHub Issue #64537",
                        "url": "https://github.com/golang/go/issues/64537"
                    }
                ],
                "notes": "Go 1.23 introduced X25519Kyber768Draft00 in crypto/tls. Go 1.24 adds dedicated crypto/mlkem package implementing FIPS 203. Production-ready PQC for TLS and QUIC. Independent implementation, doesn't wait for IETF standards. ML-DSA support still pending."
            }
        },
        "nodejs": {
            "id": "nodejs",
            "type": "runtime",
            "name": "Node.js",
            "layer": 2,
            "version": "24.7+",
            "depends_on": [
                "openssl-3.5"
            ],
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {},
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2025-08-27",
                "est_tls_date": "2027-Q1",
                "description": "JavaScript runtime",
                "sources": [
                    {
                        "label": "Node.js v24.7.0 Release",
                        "url": "https://nodejs.org/en/blog/release/v24.7.0"
                    }
                ],
                "notes": "Waiting on OpenSSL TLS support. As it stands, node:crypto API implemented PQC standards so you could encrypt your own data."
            }
        },
        "python-3": {
            "id": "python-3",
            "type": "runtime",
            "name": "Python 3.x",
            "layer": 2,
            "depends_on": [
                "openssl-3.5"
            ],
            "status": {
                "ml_kem_api": "experimental",
                "ml_kem_protocols": {
                    "tls": "experimental"
                },
                "ml_dsa_api": "experimental",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2024-12",
                "est_tls_date": "2027-Q1",
                "description": "Python interpreter with cryptography package",
                "sources": [
                    {
                        "label": "cryptography.io",
                        "url": "https://cryptography.io/"
                    },
                    {
                        "label": "PQClean GitHub",
                        "url": "https://github.com/PQClean/PQClean"
                    },
                    {
                        "label": "quantcrypt GitHub",
                        "url": "https://github.com/aabmets/quantcrypt"
                    }
                ],
                "notes": "Third-party API libraries available: quantcrypt (PQClean wrapper), kyber-py (pure Python ML-KEM). AWS-LC integration enables hybrid ML-KEM TLS 1.3 via s2n-tls. Standard cryptography package awaiting OpenSSL 3.5 adoption for mainstream support."
            }
        },
        "go": {
            "id": "go",
            "type": "runtime",
            "name": "Go",
            "layer": 2,
            "version": "1.24+",
            "depends_on": [
                "go-stdlib-crypto"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available",
                    "quic": "available"
                },
                "ml_dsa_api": "planned",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2025-02",
                "description": "Go programming language",
                "sources": [
                    {
                        "label": "Go 1.24 Release",
                        "url": "https://go.dev/doc/go1.24"
                    },
                    {
                        "label": "Go 1.24 ML-KEM",
                        "url": "https://go.dev/doc/go1.24#crypto-mlkem"
                    }
                ],
                "notes": "PQC support: Go 1.23 introduced X25519Kyber768Draft00 in crypto/tls. Go 1.24 added dedicated crypto/mlkem package implementing FIPS 203. Production-ready PQC for TLS and QUIC. MLDSA support seems likely in Go 1.27."
            }
        },
        "boringssl": {
            "id": "boringssl",
            "type": "crypto_library",
            "name": "BoringSSL",
            "layer": 1,
            "depends_on": [
                "nist-fips-203"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available",
                    "quic": "available"
                },
                "ml_dsa_api": "experimental",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2024-08",
                "description": "Google's OpenSSL fork for Chrome/Android",
                "protocols": {
                    "TLS 1.3": "available",
                    "QUIC": "available"
                },
                "sources": [
                    {
                        "label": "BoringSSL Commit",
                        "url": "https://boringssl.googlesource.com/boringssl/+/7fb4d3da5082225c7180267e9daad291887ce982"
                    }
                ],
                "notes": "X25519MLKEM768 hybrid key exchange committed August 27, 2024. Integrated into Chrome 131 (stable November 6, 2024). ML-DSA has interfaces but not stable. Internal Google project, not intended for general external use."
            }
        },
        "bouncy-castle": {
            "id": "bouncy-castle",
            "type": "crypto_library",
            "name": "Bouncy Castle",
            "layer": 1,
            "version": "1.78+",
            "depends_on": [
                "nist-fips-203",
                "nist-fips-204"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {},
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2024-09",
                "description": "Java cryptography library",
                "sources": [
                    {
                        "label": "Bouncy Castle",
                        "url": "https://www.bouncycastle.org/"
                    }
                ],
                "notes": "API support for ML-KEM and ML-DSA"
            }
        },
        "rustls": {
            "id": "rustls",
            "type": "crypto_library",
            "name": "rustls",
            "layer": 1,
            "version": "0.23+",
            "depends_on": [
                "nist-fips-203"
            ],
            "status": {
                "ml_kem_api": "experimental",
                "ml_kem_protocols": {
                    "tls": "experimental"
                },
                "ml_dsa_api": "not_available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2024-10",
                "description": "Rust TLS library",
                "protocols": {
                    "TLS 1.3": "experimental"
                },
                "sources": [
                    {
                        "label": "rustls GitHub",
                        "url": "https://github.com/rustls/rustls"
                    }
                ],
                "notes": "Experimental PQC TLS support via rustls-post-quantum"
            }
        },
        "wolfssl": {
            "id": "wolfssl",
            "type": "crypto_library",
            "name": "wolfSSL",
            "layer": 1,
            "version": "5.7+",
            "depends_on": [
                "nist-fips-203",
                "nist-fips-204"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available",
                    "dtls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2024-06",
                "description": "Embedded-focused crypto library",
                "protocols": {
                    "TLS 1.3": "available",
                    "DTLS": "available"
                },
                "sources": [
                    {
                        "label": "wolfSSL",
                        "url": "https://www.wolfssl.com/"
                    },
                    {
                        "label": "PQC Solutions Blog",
                        "url": "https://www.wolfssl.com/wolfssl-unveils-post-quantum-cryptography-and-security-solutions-at-embedded-world-2025/"
                    }
                ],
                "notes": "Full ML-KEM and ML-DSA implementation with TLS 1.3 support. Among the first crypto providers to support CNSA 2.0 compliance, particularly for embedded systems and IoT. Includes hash-based signatures (LMS, XMSS) for firmware signing."
            }
        },
        "java-jdk": {
            "id": "java-jdk",
            "type": "runtime",
            "name": "Java JDK",
            "layer": 2,
            "version": "24+",
            "depends_on": [
                "bouncy-castle"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {},
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2025-03-18",
                "est_tls_date": "2026-Q4",
                "description": "Java runtime environment",
                "protocols": {
                    "TLS 1.3": "not_available"
                },
                "sources": [
                    {
                        "label": "JEP 497",
                        "url": "https://openjdk.org/jeps/497"
                    }
                ],
                "notes": "JDK 24 (GA: March 18, 2025) introduced native APIs for ML-KEM and ML-DSA in core Java security. Short-term non-LTS release, succeeded by JDK 25 LTS in September 2025. Also uses Bouncy Castle provider for additional PQC support."
            }
        },
        "rust-lang": {
            "id": "rust-lang",
            "type": "runtime",
            "name": "Rust",
            "layer": 2,
            "version": "1.80+",
            "depends_on": [
                "rustls"
            ],
            "status": {
                "ml_kem_api": "experimental",
                "ml_kem_protocols": {
                    "tls": "experimental"
                },
                "ml_dsa_api": "planned",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2024-10",
                "description": "Rust programming language",
                "sources": [
                    {
                        "label": "Rust Lang",
                        "url": "https://www.rust-lang.org/"
                    },
                    {
                        "label": "libcrux GitHub",
                        "url": "https://github.com/cryspen/libcrux"
                    }
                ],
                "notes": "ML-KEM crates available: libcrux-ml-kem (SIMD-accelerated), enc_rust (pure Rust). Rustls added experimental Kyber/X25519 hybrid key exchange in 2024, now in main crate with prefer-post-quantum feature flag. ML-DSA planned for enc_rust."
            }
        },
        "dotnet": {
            "id": "dotnet",
            "type": "runtime",
            "name": ".NET",
            "layer": 2,
            "version": "10+",
            "depends_on": [
                "openssl-3.5"
            ],
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2025-11",
                "description": ".NET runtime",
                "protocols": {
                    "TLS 1.3": "available"
                },
                "sources": [
                    {
                        "label": ".NET Documentation",
                        "url": "https://dotnet.microsoft.com/"
                    },
                    {
                        "label": "MLKem API Reference",
                        "url": "https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.mlkem"
                    }
                ],
                "notes": ".NET 10 (November 2025) introduced native MLKem and MLDsa classes. These were finalized through Preview 6 and 7 releases. Inherits OpenSSL TLS support on Linux. Windows CNG integration includes native ML-KEM and ML-DSA support."
            }
        },
        "ruby": {
            "id": "ruby",
            "type": "runtime",
            "name": "Ruby 3.x",
            "layer": 2,
            "version": "3.3",
            "depends_on": [
                "openssl-3.5"
            ],
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2025-10",
                "description": "Ruby programming language",
                "sources": [
                    {
                        "label": "Ruby Lang",
                        "url": "https://www.ruby-lang.org/"
                    },
                    {
                        "label": "ruby/openssl GitHub",
                        "url": "https://github.com/ruby/openssl"
                    }
                ],
                "notes": "No native PQC libraries. Relies on ruby/openssl gem bindings to system OpenSSL. When linked with OpenSSL 3.5+, PQC-capable TLS 1.3 connections become available. Support depends on system configuration and gem bindings."
            }
        },
        "php": {
            "id": "php",
            "type": "runtime",
            "name": "PHP 8.x",
            "layer": 2,
            "version": "8.3",
            "depends_on": [
                "openssl-3.5"
            ],
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "date": "2025-10",
                "description": "PHP programming language",
                "sources": [
                    {
                        "label": "PHP.net",
                        "url": "https://www.php.net/"
                    },
                    {
                        "label": "OpenSSL Manual",
                        "url": "https://www.php.net/manual/en/book.openssl.php"
                    }
                ],
                "notes": "No native or pure-PHP PQC libraries. Entirely dependent on system OpenSSL via openssl extension. With OpenSSL 3.5+ configured, PHP can leverage PQC for TLS 1.3. Support is indirect and requires proper system configuration."
            }
        },
        "openssh": {
            "id": "openssh",
            "type": "infrastructure",
            "name": "OpenSSH",
            "layer": 3,
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "ssh": "available"
                },
                "ml_dsa_api": "not_available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "version": "10.0+",
                "date": "2025-04",
                "description": "Secure shell protocol implementation",
                "sources": [
                    {
                        "label": "OpenSSH 10.0 Release",
                        "url": "https://www.openssh.com/txt/release-10.0"
                    },
                    {
                        "label": "Release Notes",
                        "url": "https://www.openssh.com/releasenotes.html"
                    }
                ],
                "notes": "OpenSSH 10.0 (April 2025) uses mlkem768x25519-sha256 as default hybrid key exchange, combining ML-KEM from OpenSSL 3.5+ with X25519. SSH protocol uses custom KEX (not TLS). ML-DSA for signatures not yet implemented, still using RSA/ECDSA. OpenSSH 9.0 (2024) used independent sntrup761x25519 implementation."
            }
        },
        "nginx": {
            "id": "nginx",
            "type": "infrastructure",
            "name": "nginx",
            "layer": 3,
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "version": "1.26+",
                "date": "2024-05",
                "description": "High-performance web server and reverse proxy",
                "sources": [
                    {
                        "label": "nginx.org",
                        "url": "https://nginx.org/"
                    },
                    {
                        "label": "HTTPS Configuration",
                        "url": "https://nginx.org/en/docs/http/configuring_https_servers.html"
                    }
                ],
                "notes": "Inherits PQC TLS 1.3 support when compiled with OpenSSL 3.5+. No code changes required in nginx itself. Requires ssl_conf_command to enable hybrid cipher suites. Widely used in enterprise reverse proxy and load balancing."
            }
        },
        "apache-httpd": {
            "id": "apache-httpd",
            "type": "infrastructure",
            "name": "Apache HTTP Server",
            "layer": 3,
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "version": "2.4.62+",
                "date": "2024-07",
                "description": "Apache web server",
                "sources": [
                    {
                        "label": "Apache HTTP Server",
                        "url": "https://httpd.apache.org/"
                    },
                    {
                        "label": "mod_ssl Documentation",
                        "url": "https://httpd.apache.org/docs/2.4/mod/mod_ssl.html"
                    }
                ],
                "notes": "Inherits PQC TLS 1.3 support when compiled with OpenSSL 3.5+. SSLCipherSuite configuration may need updates for hybrid KEMs. Widely deployed in enterprise environments."
            }
        },
        "haproxy": {
            "id": "haproxy",
            "type": "infrastructure",
            "name": "HAProxy",
            "layer": 3,
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "version": "2.8+",
                "date": "2023-11",
                "description": "High-performance TCP/HTTP load balancer",
                "sources": [
                    {
                        "label": "HAProxy",
                        "url": "https://www.haproxy.org/"
                    },
                    {
                        "label": "Configuration Manual",
                        "url": "https://www.haproxy.com/documentation/haproxy-configuration-manual/latest/"
                    }
                ],
                "notes": "Inherits PQC TLS 1.3 support when compiled with OpenSSL 3.5+. Used extensively for load balancing and TLS termination in enterprise infrastructure. Configuration updates may be needed for hybrid cipher suites."
            }
        },
        "curl": {
            "id": "curl",
            "type": "infrastructure",
            "name": "curl/libcurl",
            "layer": 3,
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "version": "8.5+",
                "date": "2024-01",
                "description": "Command-line tool and library for transferring data",
                "sources": [
                    {
                        "label": "curl.se",
                        "url": "https://curl.se/"
                    },
                    {
                        "label": "SSL Certificates",
                        "url": "https://curl.se/docs/sslcerts.html"
                    }
                ],
                "notes": "Inherits PQC TLS 1.3 support when compiled with OpenSSL 3.5+. libcurl is embedded in countless applications and scripts. Automatic PQC support for any application using libcurl with updated OpenSSL."
            }
        },
        "postgresql": {
            "id": "postgresql",
            "type": "infrastructure",
            "name": "PostgreSQL",
            "layer": 3,
            "inherits_status": true,
            "status": {
                "ml_kem_api": "available",
                "ml_kem_protocols": {
                    "tls": "available"
                },
                "ml_dsa_api": "available",
                "ml_dsa_protocols": {}
            },
            "metadata": {
                "version": "17+",
                "date": "2024-09",
                "description": "Open-source relational database",
                "sources": [
                    {
                        "label": "PostgreSQL",
                        "url": "https://www.postgresql.org/"
                    },
                    {
                        "label": "SSL/TCP Documentation",
                        "url": "https://www.postgresql.org/docs/current/ssl-tcp.html"
                    }
                ],
                "notes": "Inherits PQC TLS 1.3 support when compiled with OpenSSL 3.5+. Database client-server connections can use PQC cipher suites. Widely deployed in enterprise environments and shipped with RHEL."
            }
        }
    }
}